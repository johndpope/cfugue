<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="listView_Log.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAWRXhpZgAASUkqAAgAAAAAAAAAAAD/2wBDAAgGBgcGBQgHBwcJ
        CQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJ
        CQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
        MjL/wAARCACAAUADASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAA
        AgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRol
        JicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QA
        HwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx
        BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RV
        VldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPE
        xcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigArP1m5mtLISQPtfeBnAPHPrWhWT4h/5Bo/66D+tJjRS
        hm124hWWJtyN0OEFTaZq9w139kvB8xOA23BB9DUen63bWljHBIkpZc5KgY6/Wq9l5mo659pCFVDb29AB
        0/lVdSeh1NFZOpWD3Nwsk94sdoOqk7cf0J96yJWi07UENhcs68buc59sjg0kNnW0Vg+Jf9XbfVv6Ulhp
        Ek5gvZ7g7shguOw6c5oQG/RXJtLFeajMNRnkjRSQgXsc9OhxWjYWLwXu+zvI5LXPzLvyenoOM0IGbdFY
        Gs3kj3iWKS+VGcb2zjr6+2KrXUMGmiOfT74M+cMokBJ/LtQB1FV7+V4bCaSM4dVyDjOKdazi5tY5gMb1
        zj0NRap/yDLj/cNDBFfRLue7tpHnfewfAOAOMe1adY3hv/jyl/66f0FbNNiQUVgalcz3epLp0EhRM4cj
        vxz+GO1MvdLOmQC7tJ5AyEbsnqP89qQzoqKy/wC1SdEN4ABLjbjtu6f/AF6oafpZ1CE3lxPKJGPyMDzx
        3/z6UAdHRXLWAlXxCqzMWkVmUse+FIrqaA6mDd6jd2esCJ5c25YHBUfdPvit6sPxHb7oYrgDlTtb6Hp/
        n3qyL7/iQfac/MI9v/Aun86OgdSra6hdXetNFHL/AKOrE4Cj7o98VoJFqAvy7zxm1ycIBzjt2/rVHw5b
        bYJLgjlztH0H/wBf+VV7f/kaX/32/lR2QeZ0dFc5f3JvdU+xvOIbZThiWwDjrmopjHpNzFJY3Yljb76b
        wenrihAdRRXPaxiG/tL9Putg/l/9Y0eIZDLNBCnzYQycen/6gaAOhorBnu8+GI+fmYCL8v8A6wq/o8Hk
        aZED1cbz+P8A9bFAF+iiigAooooAKKKKACiiigArJ8Q/8g0f9dB/Wtaori2hu4/LnTcmc4yRz+FDAz9J
        tLaTTIXkt4mYg5LICTya0440iQJGioo7KMCmwwx28SxRLtRegzmpKGBy8xjuNfdL5ysQYqMnAA7fQVBq
        htBdxpZhPLRQCV5BOfXvXTXOn2t2waeEMw75IP6Ux9KsXiSM267U6AEj+XWhAZviX/VW31b+la9l/wAe
        Nv8A9c1/lST2NtcoiTR7lT7vzEY/WpkRY41RBhVGAPagDBlm02/vZYrmE27jgSs20kjrnt+eapGJLXWI
        ksJzL8wwQc/UZHWukuNPtLpg00Ks3qMg/pRbWFraEmCFVY9+p/M0LQGYWsQrFrCTTqWgkwT9BwRU86aD
        AEOwSbz/AMs5Cce554rbmgiuIzHNGrqexFVotJsYXDpbruHTcS36E0IGWLZIo7aNYARFjKg56fjzUOqf
        8gy4/wBw1bpksSTRNHIMowwRnGaHqCOf0TULW0tpEnl2MXyBtJ4x7CtVNYsJJFRJ8sxAA2Nyfypv9iad
        /wA+/wD4+3+NOTR7CORXSDDKQQd7cH86AMm7/wCJf4hW4kB8pzuz7EYP5Vb1nUbZtPaKKZJHkwMKc4HX
        mtWaCK4jMc0aup7EVXh0qxgkEkduoYdCSTj86Olg63Mz7BKvhsoVPmZ83b3H+RUui6hbR6cIpZUjaMnh
        jjI68etatzM0Fs8qRmRlGdgOM1iJc6HO5mlhMcmQSGBwT9BxQHQrWMwuPEYmHRmYj6YNdTXN6Wv2rW5L
        mJCIVyRxjGRgCuko6IOpXvYPtNlLD3ZePr2rkRcSNZiyAPMu4fyxXbVTGlWSz+eIB5gbdncev0zR1Amt
        YBbWscI/gXH496wrf/kaX/32/lXR1WWwtkujcrFiYknduP8ALOKOtw6WOfuIYYNecXi5gkYtnJHB78e9
        WpU0KKZI/L37v4o3ZgPrg1s3FrBdptniVwOmeo+hqKDTLO2k3xQKG7EknH0zQgZX1m2V9JIQYEWGUew4
        /lWdpGb7UGkkGQkIT9Mf410bosiMjDKsMEeoqC2srez3eRHs3YzyTn86AOVRZJZI9O/uzH+g/oa7FQFU
        KBgAYFV10+1S6NysQExJO7J6n26VZo6B1CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKK
        ACiiigAooooAKKKKACiiigAqF7O2kcu9tCzHqSgJNTUUANREjQIiqqjoFGAKdRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQ
        AUUUUAFFFFABRRRQAUUUUAFFFFABRRRQB//Z
</value>
  </data>
</root>